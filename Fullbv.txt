module fa_bah (a, b, c, sum, cout);
  input a, b, c;             // Declare inputs a, b, and c (carry-in)
  output reg sum, cout;      // Declare output sum (sum bit) and cout (carry-out)

  always @(a or b or c) begin
    {cout, sum} = a + b + c; // Sum and carry-out calculation
  end
endmodule

module test_fa_bah;
  reg a, b, c;
  wire sum, cout;

  // Instantiate the full adder module
  fa_bah uut (a, b, c, sum, cout);

  initial begin
    $dumpfile("fa_bah.vcd");
    $dumpvars(0, test_fa_bah);

    // Apply test cases
    #0 a = 0; b = 0; c = 0;   // Test case 1: a=0, b=0, c=0
    #1 a = 0; b = 0; c = 1;   // Test case 2: a=0, b=0, c=1
    #1 a = 0; b = 1; c = 0;   // Test case 3: a=0, b=1, c=0
    #1 a = 0; b = 1; c = 1;   // Test case 4: a=0, b=1, c=1
    #1 a = 1; b = 0; c = 0;   // Test case 5: a=1, b=0, c=0
    #1 a = 1; b = 0; c = 1;   // Test case 6: a=1, b=0, c=1
    #1 a = 1; b = 1; c = 0;   // Test case 7: a=1, b=1, c=0
    #1 a = 1; b = 1; c = 1;   // Test case 8: a=1, b=1, c=1
    #1 $finish;               // End the simulation
  end
endmodule
